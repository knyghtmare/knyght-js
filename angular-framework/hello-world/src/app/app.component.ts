import { Component } from '@angular/core';
import { TestComponent } from './test/test.component';
import { RecordsService } from './records.service';


function log(target, name, descriptor) {
  console.log(target, name, descriptor)
  // store the original function in
   const original = descriptor.value
  // original()
  // a variable, do some manipulations with
  // descriptor.value
  descriptor.value = function(...args) {
    console.log("Arguments", args, " were passed in this function")
    const result = original(this, args)
    console.log("The result of the function is", result)
  }
  // return the descriptor
  return descriptor
}

/*
function log(className) {
  console.log(className)
  return (...args) => {
    console.log("Arguments passed to this class's constructor are", args)
    return new className(...args)
  }
}

@log
class MyExampleClass {
  constructor(arg1, arg2) {
    console.log("Constructor fired! ")
  } 
}

const myClass = new MyExampleClass(5, 10)
*/

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})

export class AppComponent {
  title = 'my Sample App';

  records = {}
 
  // constructor() {
  //   console.log("The statement was generated by the constructor, ",this.aSimpleMethod(5))
  // }

  constructor(private myFirstService: RecordsService) {

  }

  @log
  aSimpleMethod(varA) {
    return varA*varA
  }

  updateValue(e) {
    console.log(e.target.value)
  }

  ngOnInit() {
    this.records = this.myFirstService.getData() 
  }
}
